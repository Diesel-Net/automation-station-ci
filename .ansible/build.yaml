- hosts: manager
  roles:
    - common

  tasks:

    # - include_role:
    #     name: common
    #     tasks_from: make_config_dir


    # - include_role:
    #     name: common
    #     tasks_from: make_data_dir
    

    # - name: git clone modulocity/automation-station
    #   git:
    #     repo: 'https://{{ git_clone_pat }}@github.com/modulocity/automation-station.git'
    #     dest: '{{ config_dir }}/automation-station'
    #     depth: 1
    #     version: development
    #     accept_hostkey: yes
    #     update: yes


    # - name: git clone game-ci/docker
    #   git:
    #     repo: 'https://github.com/game-ci/docker.git'
    #     dest: '{{ config_dir }}/game-ci'
    #     depth: 1
    #     version: main
    #     accept_hostkey: yes
    #     update: yes


    - name: fetch the ProjectVersion.txt file
      fetch:
        src: '{{ config_dir }}/automation-station/ProjectSettings/ProjectVersion.txt'
        dest: '{{ playbook_dir }}/../'
        flat: yes


    - name: load variables from ProjectVersion.txt
      include_vars:
        file: '{{ playbook_dir }}/../ProjectVersion.txt'


    - name: extract version and changeset
      set_fact:
        unity_version: "{{ m_EditorVersionWithRevision.split(' ') | first }}"
        unity_changeset: "{{ m_EditorVersionWithRevision.split(' ') | last | replace('(','') | replace(')','') | replace('\n','') }}"


    - debug:
        msg: "unity_version: {{ unity_version }}"
    - debug:
        msg: "unity_changeset: {{ unity_changeset }}"


    - name: install docker python package on remote host
      pip:
        name: docker


    - name: docker login (docker.nexus.diesel.net)
      docker_login:
        registry_url: docker.nexus.diesel.net
        username: automation
        password: '{{ nexus_password }}'


    - name: docker build unity editor
      docker_image:
        build:
          pull: yes
          path: '{{ config_dir }}/game-ci'
          dockerfile: images/ubuntu/editor/Dockerfile
          args:
            hubImage: unityci/hub:latest
            baseImage: unityci/hub:latest
            version: '{{ unity_version }}'
            changeSet: '{{ unity_changeset }}'
            module: '{{ unity_module }}'
        source: build
        name: docker.nexus.diesel.net/unity-editor:{{ unity_version }}-{{ unity_module }}
        push: yes
